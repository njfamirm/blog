# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish and Deploy

on:
  workflow_dispatch:

  push:
    branches:
      - main
      - next
    tags:
      - v*

  pull_request:
    paths:
      - 'cloud/Dockerfile'
      - '.github/workflows/publish-deploy.yml'

env:
  REGISTRY: ghcr.io
  USER: njfamirm

jobs:
  publish:
    if: github.repository_owner == 'njfamirm'

    name: Build & Publish Containers
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: njfamirm-ws
            description: Njfamirm personal website.
            siteUrl: https://www.njfamirm.ir
            noIndex: 0

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: ‚§µÔ∏è Checkout repository
        uses: actions/checkout@v4.1.1

      - name: üèó Install cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@v3.2.0

      - name: üèó Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: üèó Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: |
            /tmp/.buildx-cache
            dist/img
          key: alwatr-${{ matrix.name }}

      - name: üèó Log into registry ${{env.REGISTRY}}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: üèó Extract metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          images: name=${{env.REGISTRY}}/${{env.USER}}/${{matrix.name}},enable=true

          labels: |
            org.opencontainers.image.authors=njfamirm@gmail.com
            org.opencontainers.image.title=${{ matrix.name }}
            org.opencontainers.image.description=${{ matrix.description }}
          tags: |
            type=semver,enable=true,pattern={{version}}
            type=semver,enable=true,pattern={{major}}
            type=semver,enable=true,pattern={{major}}.{{minor}}
            type=ref,enable=true,event=branch
            type=raw,enable=true,value=latest

      - name: üöÄ Build and push container image
        id: build_and_push
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./
          file: ./cloud/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            cmsApiToken=${{ secrets.cmsApiToken }}
            siteUrl=${{ matrix.siteUrl }}
            noIndex=${{ matrix.noIndex }}
          #   BUILD_DATE=${{github.event.repository.updated_at}}
          #   BUILD_REV=${{github.sha}}

      - name: üèó Sign the image with GitHub OIDC Token
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: 'true'
        run: echo "${{steps.meta.outputs.tags}}" | xargs -I {} cosign sign --yes {}@${{steps.build_and_push.outputs.digest}}

  # deploy:
  #   # needs: publish
  #   name: Deploy
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read

  #   # if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - name: ‚§µÔ∏è Checkout repository
  #       uses: actions/checkout@v4.1.1

  #     - name: Deploy on server
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: fl.njfamirm.ir
  #         username: root
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         key_path: ~/.ssh/id_ed25519
  #         port: ${{ secrets.SSH_PORT }}
  #         script: |
  #           cd /srv/njfamirm-ws
  #           docker compose pull
  #           docker compose up -d

